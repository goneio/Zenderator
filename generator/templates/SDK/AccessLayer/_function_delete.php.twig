    /**
     * Delete a Models\{{ routes['create'].singular }}Model by ID. Returns true on success, false on failure.
     * @return bool
     **/
    public function {{ route.function }}($id) : bool
    {
        /** @var $response \GuzzleHttp\Psr7\Response */
        $endpoint = $this->replaceUrlElements(
            "{{ route.pattern }}",
            [
                'id' => $id
            ]
        );
        try {
            $response = $this->request(
                "{{ route.method }}",
                $endpoint,
                [
                    'headers' => [
                        'Accept' => 'application/json',
                    ],
                ]
            );
            $body = $response->getBody()->getContents();
            if(json_decode($body) === null){
                throw new Exceptions\SDKException("Response from API ({$endpoint}) was not expected JSON: " . var_export($body, true));
            }
            $body = json_decode($body, true);
        } catch (GuzzleException\ClientException $clientException) {
            $body = $clientException->getResponse()->getBody()->getContents();
            if (json_decode($body) === null) {
                throw new Exceptions\SDKException("Response from API ({$endpoint}) was not expected JSON: " . var_export($body, true));
            }
            $body = json_decode($body, true);
        }
        if($body['Status'] == 'OKAY'){
            return true;
        }else{
            return false;
        }
    }

