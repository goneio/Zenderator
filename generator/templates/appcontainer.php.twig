<?php
{% if 'Services' in config.templates %}
{% for model in models %}
$this->container[\{{ model.namespace }}\Services\{{ model.class_name }}Service::class] = function (Slim\Container $c) {
    return new \{{ model.namespace }}\Services\{{ model.class_name }}Service(
{% for object in model.related_objects|sort %}
        $c->get(\{{ model.namespace }}\TableGateways\{{ object.remote_model_class }}TableGateway::class),
{% endfor %}
{% for remote_constraint in model.remote_constraints %}
        $c->get(\{{ model.namespace }}\TableGateways\{{ remote_constraint.local_model_class }}TableGateway::class),
{% endfor %}
        $c->get(\{{ model.namespace }}\TableGateways\{{ model.class_name }}TableGateway::class)
    );
};
{% endfor %}
{% endif %}

{% if 'Controllers' in config.templates %}
{% for model in models %}
$this->container[\{{ model.namespace }}\Controllers\{{ model.class_name }}Controller::class] = function (Slim\Container $c) {
    return new \{{ model.namespace }}\Controllers\{{ model.class_name }}Controller(
        $c->get(\{{ model.namespace }}\Services\{{ model.class_name }}Service::class)
    );
};
{% endfor %}
{% endif %}

{% for model in models %}
$this->container[\{{ model.namespace }}\TableGateways\{{ model.class_name }}TableGateway::class] = function (Slim\Container $c) {
    return new \{{ model.namespace }}\TableGateways\{{ model.class_name }}TableGateway(
{% for object in model.related_objects|sort %}
        $c->get(\{{ model.namespace }}\TableGateways\{{ object.remote_model_class }}TableGateway::class),
{% endfor %}
        $c->get('Faker'),
        $c->get('DatabaseInstance')
    );
};
{% endfor %}

{% for model in models %}
$this->container['{{ model.class_name }}MockModel'] = function (Slim\Container $c) {
    /** @var {{ model.namespace }}\TableGateways\{{ model.class_name }}TableGateway ${{ model.class_name }}TableGateway */
    ${{ model.class_name }}TableGateway = $c->get(\{{ model.namespace }}\TableGateways\{{ model.class_name }}TableGateway::class);
    $new{{ model.class_name }}Object = ${{ model.class_name }}TableGateway->getNewMockModelInstance();
    return $new{{ model.class_name }}Object;
};
{% endfor %}


return $this->container;